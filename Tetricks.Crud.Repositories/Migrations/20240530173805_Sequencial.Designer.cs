// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Tetricks.Crud.Repositories.Contexts;

#nullable disable

namespace Tetricks.Crud.Repositories.Migrations
{
    [DbContext(typeof(TetricksDbContext))]
    [Migration("20240530173805_Sequencial")]
    partial class Sequencial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Tetricks.Crud.Entities.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("AtualizadoEm")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("AtualizadoPorId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CriadoEm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CriadoPorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("Sequencial")
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.HasIdentityOptions(b.Property<long>("Sequencial"), 1L, null, null, null, null, null);

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("AtualizadoPorId");

                    b.HasIndex("CriadoPorId");

                    b.HasIndex("Sequencial");

                    b.HasIndex("Descricao", "TenantId");

                    b.ToTable("Produto", (string)null);
                });

            modelBuilder.Entity("Tetricks.Crud.Entities.Tarefa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("AtualizadoEm")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("AtualizadoPorId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Completa")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CriadoEm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CriadoPorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("Sequencial")
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.HasIdentityOptions(b.Property<long>("Sequencial"), 1L, null, null, null, null, null);

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AtualizadoPorId");

                    b.HasIndex("CriadoPorId");

                    b.HasIndex("Sequencial");

                    b.HasIndex("Descricao", "TenantId");

                    b.ToTable("Tarefa", (string)null);
                });

            modelBuilder.Entity("Tetricks.Crud.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Descricao");

                    b.HasIndex("Id");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("Tetricks.Crud.Entities.Produto", b =>
                {
                    b.HasOne("Tetricks.Crud.Entities.Usuario", "AtualizadoPor")
                        .WithMany("ProdutosAtualizados")
                        .HasForeignKey("AtualizadoPorId");

                    b.HasOne("Tetricks.Crud.Entities.Usuario", "CriadoPor")
                        .WithMany("ProdutosCriados")
                        .HasForeignKey("CriadoPorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AtualizadoPor");

                    b.Navigation("CriadoPor");
                });

            modelBuilder.Entity("Tetricks.Crud.Entities.Tarefa", b =>
                {
                    b.HasOne("Tetricks.Crud.Entities.Usuario", "AtualizadoPor")
                        .WithMany()
                        .HasForeignKey("AtualizadoPorId");

                    b.HasOne("Tetricks.Crud.Entities.Usuario", "CriadoPor")
                        .WithMany()
                        .HasForeignKey("CriadoPorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AtualizadoPor");

                    b.Navigation("CriadoPor");
                });

            modelBuilder.Entity("Tetricks.Crud.Entities.Usuario", b =>
                {
                    b.Navigation("ProdutosAtualizados");

                    b.Navigation("ProdutosCriados");
                });
#pragma warning restore 612, 618
        }
    }
}
